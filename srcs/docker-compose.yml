services:

  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    env_file:
      - ./requirements/nginx/.env
    ports:
      - "443:443"
    networks:
      - proxy
    depends_on:
      - mariadb
      - wordpress
    restart: on-failure

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend-db
    restart: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 30s
      timeout: 10s
      retries: 5
    
  wordpress:
    container_name: wordpress
    env_file:
      - .env
      - ./requirements/wordpress/.env
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wp-data:/var/www/html
    networks:
      - backend-db
      - proxy
    depends_on:
      - mariadb
      - redis
    restart: on-failure

  ### BONUS ###

  adminer:
    container_name: adminer
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - backend-db
      - proxy
    restart: on-failure
    depends_on:
      - mariadb

  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    volumes:
      - wp-data:/var/www/html
    networks:
      - backend-db
    restart: on-failure

  ftp:
    container_name: ftp
    build:
      context: ./requirements/bonus/ftp
      dockerfile: Dockerfile
    env_file:
      - ./requirements/bonus/ftp/.env
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    volumes:
      - wp-data:/var/www/html
    networks:
      - proxy
    restart: on-failure

  gatsby-app:
    container_name: gatsby-app
    build: 
      context: ./requirements/bonus/gatsby-app
      dockerfile: Dockerfile
    networks:
      - proxy
    restart: on-failure

  alien-eggs:
    container_name: alien-eggs
    build:
      context: ./requirements/bonus/alien-eggs
      dockerfile: Dockerfile
    networks:
      - proxy
    restart: on-failure

  prometheus:
    container_name: prometheus
    build:
      context: ./requirements/prometheus
      dockerfile: Dockerfile
    volumes:
      - prometheus-data:/prometheus/data
    networks:
      - monitoring
      - proxy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    container_name: grafana
    build:
      context: ./requirements/grafana
      dockerfile: Dockerfile
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
      - proxy
    depends_on:
      - prometheus
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks configuration
networks:
  backend-db:
    driver: bridge
  proxy:
    driver: bridge
  monitoring:
    driver: bridge

# Volumes
volumes:
  wp-data:
    driver: local
    driver_opts:
      type: none
      device: /home/crea/data/
      o: bind

  db-data:
    driver: local
    driver_opts:
      type: none
      device: /home/crea/data/
      o: bind

  prometheus-data:
    driver: local
    driver_opts:
      type: none
      device: /home/crea/data/prometheus
      o: bind
  grafana-data:
    driver: local
    driver_opts:
      type: none
      device: /home/crea/data/grafana
      o: bind
